#!/bin/bash
# -*- shell-script -*-

CERTIFICATE_DIR=/data/eval/certificates

if [[ -d ${CERTIFICATE_DIR} ]]; then
    rm -rf ${CERTIFICATE_DIR}
fi
mkdir ${CERTIFICATE_DIR}

certstrap --depot-path ${CERTIFICATE_DIR} init          \
          --organization "Imaginary Prototypes"         \
          --organizational-unit "Protoypical Protos"    \
          --country "US"                                \
          --common-name "evalCA"                        \
          --passphrase ""


# allow multiple services. This requires extracting the first component and use it as a secret name
# below
#CLOUD_SERVICES="engine.eval.net"
CLOUD_SERVICES="engine.eval.net dashboard.eval.net"
CLI_SERVICES="evalctl"

for SERVICE in ${CLI_SERVICES} ${CLOUD_SERVICES}; do
    certstrap --depot-path ${CERTIFICATE_DIR} request-cert --passphrase "" --common-name ${SERVICE} --domain ${SERVICE}
    certstrap --depot-path ${CERTIFICATE_DIR} sign --passphrase "" ${SERVICE} --CA evalCA
done

# We don't use a k8s TLS secret as those do not support the CA certificate
# Furthermore, we don't have much choice as to the filenames as these are
# what the nginx ingress assumes by default
for SERVICE in ${CLOUD_SERVICES}; do
    SERVICE_NAME=${SERVICE%%.*}
    kubectl -n eval create secret generic ${SERVICE_NAME}-cluster-certificates      \
            --from-file=tls.crt=${CERTIFICATE_DIR}/${SERVICE}.crt       \
            --from-file=tls.key=${CERTIFICATE_DIR}/${SERVICE}.key       \
            --from-file=ca.crt=${CERTIFICATE_DIR}/evalCA.crt
    # temp only
    if [[ ${SERVICE_NAME} == "engine" ]]; then
        kubectl -n eval create secret generic cluster-certificates      \
                --from-file=tls.crt=${CERTIFICATE_DIR}/${SERVICE}.crt       \
                --from-file=tls.key=${CERTIFICATE_DIR}/${SERVICE}.key       \
                --from-file=ca.crt=${CERTIFICATE_DIR}/evalCA.crt
    fi
done
