#!/bin/bash
# -*- shell-script -*-

kubectl -n eval create secret generic grpc-server-certificates \
  --from-file=tls.crt=/data/eval/certificates/serverCertificates/grpc-server.crt \
  --from-file=tls.key=/data/eval/certificates/serverCertificates/grpc-server.key \
  --from-file=ca.crt=/data/eval/certificates/certificatesChain/grpc-root-ca-and-grpc-server-ca-chain.crt

exit 0

CERTIFICATE_DIR=/data/eval/C

if [[ -d ${CERTIFICATE_DIR} ]]; then
    rm -rf ${CERTIFICATE_DIR}
fi
mkdir ${CERTIFICATE_DIR}

certstrap --depot-path ${CERTIFICATE_DIR} init          \
          --organization "Imaginary Prototypes"         \
          --organizational-unit "Protoypical Protos"    \
          --country "US"                                \
          --common-name "evalCA"


for SERVICE in evalctl engine.eval.net; do
    certstrap --depot-path ${CERTIFICATE_DIR} request-cert --common-name ${SERVICE}
    certstrap --depot-path ${CERTIFICATE_DIR} sign ${SERVICE} --CA evalCA
done

for SERVICE in engine.eval.net; do
    kubectl -n eval create secret generic grpc-server-certificates      \
            --from-file=tls.crt=${CERTIFICATE_DIR}/${SERVICE}.crt       \
            --from-file=tls.key=${CERTIFICATE_DIR}/${SERVICE}.key       \
            --from-file=ca.crt=${CERTIFICATE_DIR}/evalCA.crt
done

exit 0


PASSWORD=pass:notsecure

CERT_DIR=/data/eval/certificates
mkdir -p ${CERT_DIR}

ensure_dir () {
    what=$1
    dir=$2
    dir_var="${what}_DIR"
    declare ${dir_var}=${CERT_DIR}/${dir}
    mkdir -p ${!dir_var}
}


######## Root CA
ensure_dir ROOT_CA rootCA
echo "----"
echo ${!ROOT_CA_DIR}
echo "----"
ROOT_CA_DIR=${CERT_DIR}/rootCA
mkdir -p ${ROOT_CA_DIR}

openssl genrsa                                  \
-passout ${PASSWORD}                            \
-out ${ROOT_CA_DIR}/grpc-root-ca.key            \
4096

openssl req                                                             \
-new                                                                    \
-x509                                                                   \
-days 365                                                               \
-key ${ROOT_CA_DIR}/grpc-root-ca.key                                    \
-subj "/C=IN/ST=MH/L=Pune/O=Conf42/OU=Golang2021 Meetup/CN=RootCA"      \
-out ${ROOT_CA_DIR}/grpc-root-ca.crt                                    \
-passin ${PASSWORD}                                                     \
-set_serial 0                                                           \
-extensions v3_ca                                                       \
-config scripts/openssl.cnf

######## Server CA
SERVER_CA_DIR=${CERT_DIR}/serverCA
mkdir -p ${SERVER_CA_DIR}

openssl req                                                                             \
-nodes                                                                                  \
-new                                                                                    \
-keyout ${SERVER_CA_DIR}/grpc-server-ca.key                                                              \
-out ${SERVER_CA_DIR}/grpc-server-ca.csr                                                \
-subj "/C=IN/ST=MH/L=Pune/O=Conf42/OU=Golang2021 Meetup/CN=Server Intermediate CA"      \
-config scripts/openssl.cnf                                                             \
-passout ${PASSWORD}

openssl x509                                    \
-days 365                                       \
-req                                            \
-in ${SERVER_CA_DIR}/grpc-server-ca.csr         \
-CAcreateserial                                 \
-CA ${ROOT_CA_DIR}/grpc-root-ca.crt             \
-CAkey ${ROOT_CA_DIR}/grpc-root-ca.key          \
-out ${SERVER_CA_DIR}/grpc-server-ca.crt        \
-extfile scripts/openssl.cnf                    \
-extensions v3_intermediate_ca                  \
-passin ${PASSWORD}

######## Server Certificates
echo "Server certficates"
SERVER_CERTIFICATES_DIR=${CERT_DIR}/serverCertificates
mkdir -p ${SERVER_CERTIFICATES_DIR}

csr () {
    dir=$1
    base_name=$2
    common_name=$3

    openssl req                                                                 \
    -nodes                                                                      \
    -new                                                                        \
    -keyout ${dir}/${base_name}.key                                              \
    -out ${dir}/${base_name}.csr                                                 \
    -subj "/C=IN/ST=MH/L=Pune/O=Conf42/OU=Golang2021 Meetup/CN=${common_name}"  \
    -config scripts/openssl.cnf                                                 \
    -passout ${PASSWORD}
}

csr ${SERVER_CERTIFICATES_DIR} grpc-server golang2021.conf42.com

cert () {
    dir=$1
    base_name=$2
}

openssl x509                                    \
-days 365                                       \
-req                                            \
-in ${SERVER_CERTIFICATES_DIR}/grpc-server.csr  \
-CAcreateserial                                 \
-CA ${SERVER_CA_DIR}/grpc-server-ca.crt         \
-CAkey ${SERVER_CA_DIR}/grpc-server-ca.key      \
-out ${SERVER_CERTIFICATES_DIR}/grpc-server.crt \
-extfile scripts/openssl.cnf                    \
-extensions server_cert                         \
-passin ${PASSWORD}

######## Client CA
echo "Client CA"
ensure_dir CLIENT_CA clientCA

#csr ${CLIENT_CA_DIR} grpc-client-ca 'Client Intermediate CA'

# openssl x509
# -days 365
# -req
# -in grpc-client-ca.csr
# -CA ../rootCA/grpc-root-ca.crt
# -CAkey ../rootCA/grpc-root-ca.key
# -CAcreateserial
# -out grpc-client-ca.crt
# -extfile ../openssl.cnf
# -extensions v3_intermediate_ca
# -passin pass:1111
