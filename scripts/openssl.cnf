[ req ]
default_bits            = 4096
distinguished_name      = req_distinguished_name
string_mask             = utf8only
default_md              = sha512
x509_extensions         = v3_ca

[ req_distinguished_name ]

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
basicConstraints        = critical, CA:true
keyUsage                = critical, digitalSignature, cRLSign, keyCertSign
nsComment               = "OpenSSL Generated Root CA"

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
basicConstraints        = critical, CA:true, pathlen:0
keyUsage                = critical, digitalSignature, cRLSign, keyCertSign
nsComment               = "OpenSSL Generated Intermediate CA"

[ client_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints        = CA:FALSE
nsCertType              = client, email
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer
keyUsage                = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage        = clientAuth, emailProtection
nsComment               = "OpenSSL Generated Client Certificate"

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints        = CA:FALSE
nsCertType              = server
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer:always
keyUsage                = critical, digitalSignature, keyEncipherment
extendedKeyUsage        = serverAuth
nsComment               = "OpenSSL Generated Server Certificate"
subjectAltName          = @alt_names
[ alt_names ]
DNS.1                   = localhost
DNS.2                   = 0.0.0.0
DNS.3                   = golang2021.conf42.com
DNS.4                   = https://golang2021.conf42.com
